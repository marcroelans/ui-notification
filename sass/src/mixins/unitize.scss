$remfactor: 16;


@function parseInt($n) {
  @return $n / ($n * 0 + 1);
}

@mixin unitize($property, $values) {
  $px: ();
  $rem: ();

  @each $value in $values {

    @if $value == 0 or $value == auto or $value == normal {
      $px: append($px, $value);
      $rem: append($rem, $value);
    } @else {
      $unit: unit($value);
      $val: parseInt($value);
      @if $unit == '' {
        $px: append($px, ($value + px));
        $rem: append($rem, ($val / $remfactor + rem));
      }
      @if $unit == 'px' {
        $px: append($px, $value);
        $rem: append($rem,  ($val / $remfactor + rem));
      }
      @if $unit == 'rem' {
        $px: append($px,  ($val * $remfactor + px));
        $rem: append($rem, $value);
      }
    }
  }

  @if $px == $rem {
    #{$property}: $px;
  } @else {
    #{$property}: $px;
    #{$property}: $rem;
  }
}
